{"version":3,"sources":["index.tsx"],"names":["data","a","prom","fetch","then","r","json","d","ReactDOM","render","App","document","getElementById","_props","N","length","gData","Array","keys","map","_","idx","lat","lng","size","Math","random","color","round","className","globeImageUrl","bumpImageUrl","pointsData","pointAltitude","pointColor","main"],"mappings":"sLAIIA,EAAmB,G,4CAEvB,4BAAAC,EAAA,6DACQC,EAAOC,MAAM,kBAChBC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GACLP,EAAOO,KAJb,SAOQL,EAPR,OASEM,IAASC,OAAO,cAACC,EAAD,IAASC,SAASC,eAAe,SATnD,4C,sBAYA,SAASF,EAAIG,GACX,IAAMC,EAAId,EAAKe,OACTC,EAAQ,YAAIC,MAAMH,GAAGI,QAAQC,KAAI,SAACC,EAAGC,GACzC,MAAO,CACLC,IAAKtB,EAAKqB,GAAK,GACfE,IAAKvB,EAAKqB,GAAK,GACfG,KAAMC,KAAKC,SAAW,EACtBC,MAAO,CAAC,MAAO,QAAS,OAAQ,SAASF,KAAKG,MAAsB,EAAhBH,KAAKC,eAI7D,OACE,qBAAKG,UAAU,MAAf,SACE,cAAC,IAAD,CACEC,cAAc,qDACdC,aAAa,yDACbC,WAAYhB,EACZiB,cAAe,iBAAM,KACrBC,WAAY,a,mCAMpBC,I","file":"static/js/main.372e797d.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Globe from \"react-globe.gl\";\n\nlet data: number[][] = [];\n\nasync function main() {\n  const prom = fetch(\"aispoints.json\")\n    .then((r) => r.json())\n    .then((d) => {\n      data = d;\n    });\n\n  await prom;\n\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\nfunction App(_props: {}) {\n  const N = data.length;\n  const gData = [...Array(N).keys()].map((_, idx) => {\n    return {\n      lat: data[idx][0],\n      lng: data[idx][1],\n      size: Math.random() / 3,\n      color: [\"red\", \"white\", \"blue\", \"green\"][Math.round(Math.random() * 3)],\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      <Globe\n        globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-dark.jpg\"\n        bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n        pointsData={gData}\n        pointAltitude={() => 0.01}\n        pointColor={\"color\"}\n      />\n    </div>\n  );\n}\n\nmain();\n"],"sourceRoot":""}